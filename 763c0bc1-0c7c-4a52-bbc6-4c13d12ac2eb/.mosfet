{
  "layout": "Choropleth",
  "rdbmsId": "763c0bc1-0c7c-4a52-bbc6-4c13d12ac2eb",
  "engine": "Diabetes_Location",
  "insightName": "Countries",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"Diabetes_Location\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME524311\u0027 ] ) ;Database ( Diabetes_Location ) | Select ( Country , frame , gender , id , id__age , id__bp_1d , id__bp_1s , id__bp_2d , id__bp_2s , id__chol , id__glyhb , id__hdl , id__height , id__hip , id__ratio , id__stab_glu , id__time_ppn , id__waist , id__weight , location_1 , State_1 ) .as ( [ Country , frame , gender , id , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , ratio , stab_glu , time_ppn , waist , weight , location_1 , State_1 ] ) | Join ( ( id , inner.join , frame ) , ( id , inner.join , State_1 ) , ( id , inner.join , gender ) , ( id , inner.join , Country ) , ( id , inner.join , location_1 ) ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Country , State_1 , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , frame , gender , glyhb , hdl , height , hip , id , location_1 , ratio , stab_glu , time_ppn , waist , weight ) .as ( [ Country , State_1 , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , frame , gender , glyhb , hdl , height , hip , id , location_1 , ratio , stab_glu , time_ppn , waist , weight ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"State_1\" , \"age\" , \"bp_1d\" , \"bp_1s\" , \"bp_2d\" , \"bp_2s\" , \"chol\" , \"frame\" , \"gender\" , \"glyhb\" , \"hdl\" , \"height\" , \"hip\" , \"id\" , \"location_1\" , \"ratio\" , \"stab_glu\" , \"time_ppn\" , \"waist\" , \"weight\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Count ( State_1 ) ) .as ( [ Country , CountofState_1 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"CountofState_1\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Count ( State_1 ) ) .as ( [ Country , CountofState_1 ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"CountofState_1\" ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( Country ) ) , ( Select ( Country , Count ( id ) ) .as ( [ Country , Countofid ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Countofid\" ] } } } ) | Collect ( 500 ) ) , ( Select ( Country , Count ( id ) ) .as ( [ Country , Countofid ] ) | Group ( Country ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Choropleth\" , \"alignment\" : { \"label\" : [ \"Country\" ] , \"value\" : [ \"Countofid\" ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"chloroType\" : Country } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.chloroType\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"heatmapLegend\" : \"piecewise\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.heatmapLegend\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"heatmapLegend\" : \"continuous\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.heatmapLegend\" ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}