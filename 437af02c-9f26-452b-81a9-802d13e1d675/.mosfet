{
  "layout": "Column",
  "image": "image.png",
  "rdbmsId": "437af02c-9f26-452b-81a9-802d13e1d675",
  "engine": "Diabetes_Location",
  "insightName": "New Visualization",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : true , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"Diabetes_Location\"}\u003c/encode\u003e\" ) ;CreateFrame ( grid ) .as ( [ \u0027FRAME375331\u0027 ] ) ;Database ( Diabetes_Location ) | Select ( Country , frame , gender , id , id__age , id__bp_1d , id__bp_1s , id__bp_2d , id__bp_2s , id__chol , id__glyhb , id__hdl , id__height , id__hip , id__ratio , id__stab_glu , id__time_ppn , id__waist , id__weight , location_1 , State_1 ) .as ( [ Country , frame , gender , id , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , ratio , stab_glu , time_ppn , waist , weight , location_1 , State_1 ] ) | Join ( ( id , inner.join , frame ) , ( id , inner.join , State_1 ) , ( id , inner.join , gender ) , ( id , inner.join , Country ) , ( id , inner.join , location_1 ) ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( Country , State_1 , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , frame , gender , glyhb , hdl , height , hip , id , location_1 , ratio , stab_glu , time_ppn , waist , weight ) .as ( [ Country , State_1 , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , frame , gender , glyhb , hdl , height , hip , id , location_1 , ratio , stab_glu , time_ppn , waist , weight ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"Country\" , \"State_1\" , \"age\" , \"bp_1d\" , \"bp_1s\" , \"bp_2d\" , \"bp_2s\" , \"chol\" , \"frame\" , \"gender\" , \"glyhb\" , \"hdl\" , \"height\" , \"hip\" , \"id\" , \"location_1\" , \"ratio\" , \"stab_glu\" , \"time_ppn\" , \"waist\" , \"weight\" ] } } } ) | Collect ( 500 ) ;\u003cj\u003e\u003cencode\u003esynchronizeGridToRDataTable(\"FRAME375331\")\u003c/encode\u003e\u003c/j\u003e ;Frame ( ) | Select ( age , bp_1d , bp_1s , bp_2d , bp_2s , chol , Country , frame , gender , glyhb , hdl , height , hip , id , location_1 , ratio , stab_glu , State_1 , time_ppn , waist , weight ) .as ( [ age , bp_1d , bp_1s , bp_2d , bp_2s , chol , Country , frame , gender , glyhb , hdl , height , hip , id , location_1 , ratio , stab_glu , State_1 , time_ppn , waist , weight ] ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"age\" , \"bp_1d\" , \"bp_1s\" , \"bp_2d\" , \"bp_2s\" , \"chol\" , \"Country\" , \"frame\" , \"gender\" , \"glyhb\" , \"hdl\" , \"height\" , \"hip\" , \"id\" , \"location_1\" , \"ratio\" , \"stab_glu\" , \"State_1\" , \"time_ppn\" , \"waist\" , \"weight\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( age ) ) , ( Select ( age , Sum ( bp_1d ) , Sum ( bp_1s ) , Sum ( bp_2d ) , Sum ( bp_2s ) , Sum ( chol ) , Count ( Country ) , Count ( frame ) , Count ( gender ) , Sum ( glyhb ) , Sum ( hdl ) , Sum ( height ) , Sum ( hip ) , Count ( id ) , Count ( location_1 ) , Sum ( ratio ) , Sum ( stab_glu ) , Count ( State_1 ) , Sum ( time_ppn ) , Sum ( waist ) , Sum ( weight ) ) .as ( [ age , Sumofbp_1d , Sumofbp_1s , Sumofbp_2d , Sumofbp_2s , Sumofchol , CountofCountry , Countofframe , Countofgender , Sumofglyhb , Sumofhdl , Sumofheight , Sumofhip , Countofid , Countoflocation_1 , Sumofratio , Sumofstab_glu , CountofState_1 , Sumoftime_ppn , Sumofwaist , Sumofweight ] ) | Group ( age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"age\" ] , \"value\" : [ \"Sumofbp_1d\" , \"Sumofbp_1s\" , \"Sumofbp_2d\" , \"Sumofbp_2s\" , \"Sumofchol\" , \"CountofCountry\" , \"Countofframe\" , \"Countofgender\" , \"Sumofglyhb\" , \"Sumofhdl\" , \"Sumofheight\" , \"Sumofhip\" , \"Countofid\" , \"Countoflocation_1\" , \"Sumofratio\" , \"Sumofstab_glu\" , \"CountofState_1\" , \"Sumoftime_ppn\" , \"Sumofwaist\" , \"Sumofweight\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( age , bp_1d , bp_1s , bp_2d , bp_2s , chol , Count ( Country ) , Count ( frame ) , Count ( gender ) , glyhb , hdl , height , hip , Count ( id ) , Count ( location_1 ) , ratio , stab_glu , Count ( State_1 ) , time_ppn , waist , weight ) .as ( [ age , bp_1d , bp_1s , bp_2d , bp_2s , chol , CountofCountry , Countofframe , Countofgender , glyhb , hdl , height , hip , Countofid , Countoflocation_1 , ratio , stab_glu , CountofState_1 , time_ppn , waist , weight ] ) | Group ( age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"age\" ] , \"value\" : [ \"bp_1d\" , \"bp_1s\" , \"bp_2d\" , \"bp_2s\" , \"chol\" , \"CountofCountry\" , \"Countofframe\" , \"Countofgender\" , \"glyhb\" , \"hdl\" , \"height\" , \"hip\" , \"Countofid\" , \"Countoflocation_1\" , \"ratio\" , \"stab_glu\" , \"CountofState_1\" , \"time_ppn\" , \"waist\" , \"weight\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( id ) ) , ( Select ( id , Sum ( chol ) ) .as ( [ id , Sumofchol ] ) | Group ( id ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"Sumofchol\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( id , chol ) .as ( [ id , chol ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"chol\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( id ) ) , ( Select ( id , Sum ( chol ) , Sum ( glyhb ) ) .as ( [ id , Sumofchol , Sumofglyhb ] ) | Group ( id ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"Sumofchol\" , \"Sumofglyhb\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( id , chol , glyhb ) .as ( [ id , chol , glyhb ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"chol\" , \"glyhb\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( id ) ) , ( Select ( id , Sum ( chol ) , Sum ( glyhb ) , Sum ( stab_glu ) ) .as ( [ id , Sumofchol , Sumofglyhb , Sumofstab_glu ] ) | Group ( id ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"Sumofchol\" , \"Sumofglyhb\" , \"Sumofstab_glu\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( id , chol , glyhb , stab_glu ) .as ( [ id , chol , glyhb , stab_glu ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"chol\" , \"glyhb\" , \"stab_glu\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleZoom\" : { \"toggleZoomX\" : \"Yes\" , \"toggleZoomY\" : \"No\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleZoom\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleExtremes\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleExtremes\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleAverage\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleAverage\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleErrorBars\" : { \"showBars\" : \"No\" , \"errorValue\" : \"10\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleErrorBars\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleErrorBars\" : { \"showBars\" : \"Yes\" , \"errorValue\" : \"2\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleErrorBars\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleLegend\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleLegend\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleZoom\" : { \"toggleZoomX\" : \"No\" , \"toggleZoomY\" : \"No\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleZoom\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleExtremes\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleExtremes\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleAverage\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleAverage\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;ReplaceFrameFilter ( ( age \u003d\u003d [ 21 , 22 , 23 , 24 ] ) ) ;Frame ( ) | Select ( id , chol , glyhb , stab_glu ) .as ( [ id , chol , glyhb , stab_glu ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Column\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"chol\" , \"glyhb\" , \"stab_glu\" ] } } } ) | Collect ( 500 ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleExtremes\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleExtremes\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleExtremes\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleExtremes\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleErrorBars\" : { \"showBars\" : \"No\" , \"errorValue\" : \"10\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleErrorBars\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"rotateAxis\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.rotateAxis\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"yReversed\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.yReversed\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"yReversed\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.yReversed\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleErrorBars\" : { \"showBars\" : \"Yes\" , \"errorValue\" : \"10\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.toggleErrorBars\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"yReversed\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.yReversed\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"yReversed\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.yReversed\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"yReversed\" : true } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.yReversed\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"yReversed\" : false } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools.shared.yReversed\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"showMenu\" : true } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"showMenu\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Semoss\" , \"color\" : { \"chol\" : \"#48BFA8\" , \"glyhb\" : \"#E0BF39\" , \"stab glu\" : \"#E67E22\" } } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Custom\" , \"color\" : { \"chol\" : \"#48BFA8\" , \"glyhb\" : \"#E0BF39\" , \"stab glu\" : \"#E67E22\" } , \"backgroundColor\" : \"#151b0d\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel ( 0 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"colorName\" : \"Custom\" , \"color\" : { \"chol\" : \"#48BFA8\" , \"glyhb\" : \"#E0BF39\" , \"stab glu\" : \"#E67E22\" } , \"backgroundColor\" : \"#bbc4b0\" } } } ) ;Panel ( 0 ) | RetrievePanelOrnaments ( \"tools\" ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}