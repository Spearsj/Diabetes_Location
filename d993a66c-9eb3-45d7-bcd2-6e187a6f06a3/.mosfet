{
  "layout": "Radar",
  "rdbmsId": "d993a66c-9eb3-45d7-bcd2-6e187a6f06a3",
  "hidden": false,
  "engine": "Diabetes_Location",
  "insightName": "Test Scores",
  "recipe": "AddPanel ( 0 ) ;Panel ( 0 ) | AddPanelEvents ( { \"onSingleClick\" : { \"Unfilter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eUnfilterFrame(\u003cSelectedColumn\u003e);\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabledVisuals\" : [ \"Grid\" , \"Sunburst\" ] , \"disabled\" : false } ] } , \"onBrush\" : { \"Filter\" : [ { \"panel\" : \"\" , \"query\" : \"\u003cencode\u003eif(IsEmpty(\u003cSelectedValues\u003e), UnfilterFrame(\u003cSelectedColumn\u003e), SetFrameFilter(\u003cSelectedColumn\u003e\u003d\u003d\u003cSelectedValues\u003e));\u003c/encode\u003e\" , \"options\" : { } , \"refresh\" : false , \"default\" : true , \"disabled\" : false } ] } } ) ;Panel ( 0 ) | RetrievePanelEvents ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" , \"\u003cencode\u003e{\"type\":\"echarts\"}\u003c/encode\u003e\" ) ;Panel ( 0 ) | SetPanelView ( \"federate-view\" , \"\u003cencode\u003e{\"core_engine\":\"Diabetes_Location\"}\u003c/encode\u003e\" ) ;CreateFrame ( GRID ) .as ( [ \u0027FRAME649648\u0027 ] ) ;Database ( Diabetes_Location ) | Select ( id , id__age , id__bp_1d , id__bp_1s , id__bp_2d , id__bp_2s , id__chol , id__glyhb , id__hdl , id__height , id__hip , id__ratio , id__stab_glu , id__time_ppn , id__waist , id__weight ) .as ( [ id , age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , ratio , stab_glu , time_ppn , waist , weight ] ) | Import ( ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Panel ( 0 ) | SetPanelView ( \"visualization\" ) ;Frame ( ) | Select ( age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , id , ratio , stab_glu , time_ppn , waist , weight ) .as ( [ age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , id , ratio , stab_glu , time_ppn , waist , weight ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Grid\" , \"alignment\" : { \"label\" : [ \"age\" , \"bp_1d\" , \"bp_1s\" , \"bp_2d\" , \"bp_2s\" , \"chol\" , \"glyhb\" , \"hdl\" , \"height\" , \"hip\" , \"id\" , \"ratio\" , \"stab_glu\" , \"time_ppn\" , \"waist\" , \"weight\" ] } } } ) | Collect ( 500 ) ;if ( ( HasDuplicates ( age ) ) , ( Select ( age , Average ( bp_1d ) , Average ( bp_1s ) , Average ( bp_2d ) , Average ( bp_2s ) , Average ( chol ) , Average ( glyhb ) , Average ( hdl ) , Average ( height ) , Average ( hip ) , Count ( id ) , Average ( ratio ) , Average ( stab_glu ) , Average ( time_ppn ) , Average ( waist ) , Average ( weight ) ) .as ( [ age , Averageofbp_1d , Averageofbp_1s , Averageofbp_2d , Averageofbp_2s , Averageofchol , Averageofglyhb , Averageofhdl , Averageofheight , Averageofhip , Countofid , Averageofratio , Averageofstab_glu , Averageoftime_ppn , Averageofwaist , Averageofweight ] ) | Group ( age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"age\" ] , \"value\" : [ \"Averageofbp_1d\" , \"Averageofbp_1s\" , \"Averageofbp_2d\" , \"Averageofbp_2s\" , \"Averageofchol\" , \"Averageofglyhb\" , \"Averageofhdl\" , \"Averageofheight\" , \"Averageofhip\" , \"Countofid\" , \"Averageofratio\" , \"Averageofstab_glu\" , \"Averageoftime_ppn\" , \"Averageofwaist\" , \"Averageofweight\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , Count ( id ) , ratio , stab_glu , time_ppn , waist , weight ) .as ( [ age , bp_1d , bp_1s , bp_2d , bp_2s , chol , glyhb , hdl , height , hip , Countofid , ratio , stab_glu , time_ppn , waist , weight ] ) | Group ( age ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"age\" ] , \"value\" : [ \"bp_1d\" , \"bp_1s\" , \"bp_2d\" , \"bp_2s\" , \"chol\" , \"glyhb\" , \"hdl\" , \"height\" , \"hip\" , \"Countofid\" , \"ratio\" , \"stab_glu\" , \"time_ppn\" , \"waist\" , \"weight\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( id ) ) , ( Select ( id , Average ( stab_glu ) , Average ( ratio ) , Average ( glyhb ) , Average ( chol ) ) .as ( [ id , Averageofstab_glu , Averageofratio , Averageofglyhb , Averageofchol ] ) | Group ( id ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"Averageofstab_glu\" , \"Averageofratio\" , \"Averageofglyhb\" , \"Averageofchol\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( id , stab_glu , ratio , glyhb , chol ) .as ( [ id , stab_glu , ratio , glyhb , chol ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"stab_glu\" , \"ratio\" , \"glyhb\" , \"chol\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( hip ) ) , ( Select ( hip , Average ( stab_glu ) , Average ( ratio ) , Average ( glyhb ) , Average ( chol ) ) .as ( [ hip , Averageofstab_glu , Averageofratio , Averageofglyhb , Averageofchol ] ) | Group ( hip ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"hip\" ] , \"value\" : [ \"Averageofstab_glu\" , \"Averageofratio\" , \"Averageofglyhb\" , \"Averageofchol\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( hip , stab_glu , ratio , glyhb , chol ) .as ( [ hip , stab_glu , ratio , glyhb , chol ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"hip\" ] , \"value\" : [ \"stab_glu\" , \"ratio\" , \"glyhb\" , \"chol\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( hip ) ) , ( Select ( hip , Average ( stab_glu ) , Average ( ratio ) , Average ( glyhb ) , Average ( chol ) , Average ( waist ) ) .as ( [ hip , Averageofstab_glu , Averageofratio , Averageofglyhb , Averageofchol , Averageofwaist ] ) | Group ( hip ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"hip\" ] , \"value\" : [ \"Averageofstab_glu\" , \"Averageofratio\" , \"Averageofglyhb\" , \"Averageofchol\" , \"Averageofwaist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( hip , stab_glu , ratio , glyhb , chol , waist ) .as ( [ hip , stab_glu , ratio , glyhb , chol , waist ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"hip\" ] , \"value\" : [ \"stab_glu\" , \"ratio\" , \"glyhb\" , \"chol\" , \"waist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( height ) ) , ( Select ( height , Average ( stab_glu ) , Average ( ratio ) , Average ( glyhb ) , Average ( chol ) , Average ( waist ) ) .as ( [ height , Averageofstab_glu , Averageofratio , Averageofglyhb , Averageofchol , Averageofwaist ] ) | Group ( height ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"height\" ] , \"value\" : [ \"Averageofstab_glu\" , \"Averageofratio\" , \"Averageofglyhb\" , \"Averageofchol\" , \"Averageofwaist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( height , stab_glu , ratio , glyhb , chol , waist ) .as ( [ height , stab_glu , ratio , glyhb , chol , waist ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"height\" ] , \"value\" : [ \"stab_glu\" , \"ratio\" , \"glyhb\" , \"chol\" , \"waist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( bp_2s ) ) , ( Select ( bp_2s , Average ( stab_glu ) , Average ( ratio ) , Average ( glyhb ) , Average ( chol ) , Average ( waist ) ) .as ( [ bp_2s , Averageofstab_glu , Averageofratio , Averageofglyhb , Averageofchol , Averageofwaist ] ) | Group ( bp_2s ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"bp_2s\" ] , \"value\" : [ \"Averageofstab_glu\" , \"Averageofratio\" , \"Averageofglyhb\" , \"Averageofchol\" , \"Averageofwaist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( bp_2s , stab_glu , ratio , glyhb , chol , waist ) .as ( [ bp_2s , stab_glu , ratio , glyhb , chol , waist ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"bp_2s\" ] , \"value\" : [ \"stab_glu\" , \"ratio\" , \"glyhb\" , \"chol\" , \"waist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;if ( ( HasDuplicates ( id ) ) , ( Select ( id , Average ( stab_glu ) , Average ( ratio ) , Average ( glyhb ) , Average ( chol ) , Average ( waist ) ) .as ( [ id , Averageofstab_glu , Averageofratio , Averageofglyhb , Averageofchol , Averageofwaist ] ) | Group ( id ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"Averageofstab_glu\" , \"Averageofratio\" , \"Averageofglyhb\" , \"Averageofchol\" , \"Averageofwaist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) , ( Select ( id , stab_glu , ratio , glyhb , chol , waist ) .as ( [ id , stab_glu , ratio , glyhb , chol , waist ] ) | With ( Panel ( 0 ) ) | Format ( type \u003d [ \u0027table\u0027 ] ) | TaskOptions ( { \"0\" : { \"layout\" : \"Radar\" , \"alignment\" : { \"label\" : [ \"id\" ] , \"value\" : [ \"stab_glu\" , \"ratio\" , \"glyhb\" , \"chol\" , \"waist\" ] , \"facet\" : [ ] } } } ) | Collect ( 500 ) ) ) ;UnfilterFrame ( undefined ) ;Panel(0)|AddPanelOrnaments({\"showMenu\":true});Panel(0)|RetrievePanelOrnaments(\"showMenu\");"
}